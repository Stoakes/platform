security:
    encoders:
        FOS\UserBundle\Model\UserInterface: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            provider: fos_userbundle
            stateless: true
            anonymous: true
            form_login:
                check_path:     /api/login_check
                require_previous_session: false
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure


        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            provider: fos_userbundle
            lexik_jwt:
                authorization_header:
                    enabled: true
                    prefix:  Bearer
                query_parameter:
                    enabled: true
                    name:    bearer
                throw_exceptions:        false
                create_entry_point:      true
            logout:
                path: /logout

        my_firewall:
            pattern: ^/
            anonymous: ~
            trusted_sso:
                manager: admin_sso
                login_action: false         # BeSimpleSsoAuthBundle:TrustedSso:login
                logout_action: false        # BeSimpleSsoAuthBundle:TrustedSso:logout
                create_users: false
                created_users_roles: [ROLE_USER ]
                login_path: /login
                check_path: /login_check
            logout:
                path:   /logout
                target: /


    access_control:
        - { path: ^/login,    roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/,      roles: IS_AUTHENTICATED_FULLY}


    role_hierarchy:
        ROLE_ADMIN: ROLE_PROF
        ROLE_PROF: ROLE_ELEVE
